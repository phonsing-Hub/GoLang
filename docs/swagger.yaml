basePath: /api/v1
definitions:
  response.SWErrorDetail:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  response.SWErrorResponse:
    properties:
      data:
        type: object
      error:
        $ref: '#/definitions/response.SWErrorDetail'
      success:
        example: false
        type: boolean
    type: object
  response.SWSuccessResponse:
    properties:
      data:
        type: object
      error:
        type: object
      success:
        example: true
        type: boolean
    type: object
  schema.LoginRequest:
    properties:
      email:
        description: can be email or username
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  schema.RegisterRequest:
    properties:
      display_name:
        maxLength: 100
        type: string
      email:
        type: string
      first_name:
        maxLength: 100
        minLength: 1
        type: string
      last_name:
        maxLength: 100
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - first_name
    - password
    type: object
  schema.UpdateUser:
    properties:
      bio:
        maxLength: 500
        type: string
      date_of_birth:
        type: string
      display_name:
        maxLength: 100
        type: string
      email:
        type: string
      first_name:
        maxLength: 100
        minLength: 1
        type: string
      gender:
        enum:
        - male
        - female
        - other
        type: string
      language_preference:
        maxLength: 5
        minLength: 2
        type: string
      last_name:
        maxLength: 100
        type: string
      phone_number:
        maxLength: 20
        minLength: 10
        type: string
      time_zone:
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    type: object
info:
  contact: {}
  description: This is a sample API server using Fiber framework
  title: GoLang API
  version: "1.0"
paths:
  /auth/google:
    post:
      consumes:
      - application/json
      description: Redirect to Google OAuth login
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SWSuccessResponse'
      summary: Google OAuth Login
      tags:
      - AUTH
  /auth/google/callback:
    post:
      consumes:
      - application/json
      description: Handle Google OAuth callback and exchange code for tokens
      parameters:
      - description: Authorization Code Request
        in: body
        name: request
        required: true
        schema:
          properties:
            code:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SWSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.SWErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.SWErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.SWErrorResponse'
      summary: Google OAuth Callback
      tags:
      - AUTH
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login user with email and password
      parameters:
      - description: Login Request
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/schema.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SWSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.SWErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.SWErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.SWErrorResponse'
      summary: User Login
      tags:
      - AUTH
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email, username, and password
      parameters:
      - description: Register Request
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/schema.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.SWSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.SWErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.SWErrorResponse'
      summary: User Registration
      tags:
      - AUTH
  /auth/userinfo:
    get:
      consumes:
      - application/json
      description: Retrieve the authenticated user's information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SWSuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.SWErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.SWErrorResponse'
      security:
      - BearerAuth: []
      summary: Get User Info
      tags:
      - AUTH
  /profile:
    get:
      consumes:
      - application/json
      description: Retrieve the authenticated user's profile information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SWSuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.SWErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.SWErrorResponse'
      security:
      - BearerAuth: []
      summary: Get User Profile
      tags:
      - PROFILE
    put:
      consumes:
      - application/json
      description: Update the authenticated user's profile information
      parameters:
      - description: User Profile Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/schema.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SWSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.SWErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.SWErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.SWErrorResponse'
      security:
      - BearerAuth: []
      summary: Update User Profile
      tags:
      - PROFILE
  /profile/avatar:
    put:
      consumes:
      - multipart/form-data
      description: Update the authenticated user's avatar
      parameters:
      - description: Avatar image file (PNG, JPEG, WEBP, max 2MB)
        in: formData
        name: avatar
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SWSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.SWErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.SWErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.SWErrorResponse'
      security:
      - BearerAuth: []
      summary: Update User Avatar
      tags:
      - PROFILE
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
